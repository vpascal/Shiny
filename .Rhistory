View(df)
df%>% group_by(Date,Name ) %>% summarise(total = sum(Answer))
df%>% group_by(Date) %>% summarise(total = sum(Answer))
View(df)
View(df)
View(df)
df <- read.csv("report_2014-06-03.csv", sep="\t",header=TRUE)
df<-df[df$Question == "0-16 years",]
df$Answer<-as.numeric(df$Answer)
df <- read.csv("report_2014-06-03.csv", sep="\t",header=TRUE)
df<-df[df$Question == "0-16 years",]
df$Answer<-as.numeric(df$Answer)
df%>% group_by(Date) %>% summarise(total = sum(Answer))
df <- read.csv("report_2014-06-03.csv", sep="\t",header=TRUE)
df<-df[df$Question == "0-16 years",]
df$Answer<-as.numeric(df$Answer)
df%>% group_by(Date) %>% mutate(total = sum(Answer))
df%>% group_by(Date) %>% summarise(total = sum(Answer),na.rm = TRUE)
df%>% group_by(Date) %>% summarise(total = sum(Answer),na.rm = FALSE)
df%>% group_by(Date) %>% summarise(total = sum(Answer,na.rm = FALSE))
df <- read.csv("report_2014-06-03.csv", sep="\t",header=TRUE)
df<-df[df$Question == "0-16 years",]
df$Answer<-as.numeric(df$Answer)
df%>% group_by(Date) %>% summarise(total = sum(Answer,na.rm = FALSE))
df%>% group_by(Date) %>% summarise(total = sum(Answer,na.rm = TRUE))
df%>% group_by(Date) %>% summarise(Answer = sum(Answer,na.rm = TRUE))
View(df)
df <- read.csv("report_2014-06-03.csv", sep="\t",header=TRUE)
df<-df[df$Question == "0-16 years",]
View(df)
df <- read.csv("report_2014-06-03.csv", sep="\t",header=TRUE)
df<-df[df$Question == "0-16 years",]
View(df)
df$Answer<-as.numeric(df$Answer)
View(df)
options(stringsAsFactors = FALSE)
df <- read.csv("report_2014-06-03.csv", sep="\t",header=TRUE)
df<-df[df$Question == "0-16 years",]
df$Answer<-as.numeric(df$Answer)
View(df)
df%>% group_by(Date) %>% summarise(Answer = sum(Answer,na.rm = TRUE))
shiny::runApp()
df<-df%>% group_by(Date) %>% summarise(Answer = sum(Answer,na.rm = TRUE))
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
View(df)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
options(stringsAsFactors = FALSE)
df <- read.csv("report_2014-06-25.csv", sep="\t",header=TRUE)
df<-df[df$Question == "0-16 years",]
df$Answer<-as.numeric(df$Answer)
df<-df%>% group_by(Date) %>% summarise(Answer = sum(Answer,na.rm = TRUE))
View(df)
df <- read.csv("report_2014-06-25.csv", sep="\t",header=TRUE)
View(df)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
options(stringsAsFactors = FALSE)
df <- read.csv("report_2014-06-25.csv", sep="\t",header=TRUE)
pattern <- grep("Number of all unique users to library", data$Question, useBytes = T)
pattern <- grep("Number of all unique users to library", df$Question, useBytes = T)
df<-df[pattern,]
View(df)
df$Answer<-as.numeric(df$Answer)
df<-df%>% group_by(Date) %>% summarise(Answer = sum(Answer,na.rm = TRUE))
View(df)
shiny::runApp()
options(stringsAsFactors = FALSE)
df <- read.csv("report_2014-06-26.csv", sep="\t",header=TRUE)
pattern <- grep("Number of all unique users to library", df$Question, useBytes = T)
df<-df[pattern,]
df$Answer<-as.numeric(df$Answer)
df<-df%>% group_by(Date) %>% summarise(Answer = sum(Answer,na.rm = TRUE))
View(df)
shiny::runApp()
getwd()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
df <- read.csv("report_2014-06-26.csv", sep="\t",header=TRUE)
View(df)
shiny::runApp()
View(df)
shiny::runApp()
shiny::runApp()
View(df)
options(stringsAsFactors = FALSE)
data <- read.csv("report_2014-06-26.csv", sep="\t",header=TRUE)
trim <- function (x) gsub("^\\s+|\\s+$+|\\?", "", x)
replace<-function (x) gsub("unic", "unique", x)
data<-as.data.frame(apply(data,MARGIN=2,FUN=trim))
data<-as.data.frame(apply(data,MARGIN=2,FUN=replace))
data<-data[which(data$Question !="Upload other documents" & data$Question !="Upload photos"),]
data<-data[which(data$Name !="Biblioteca Publica de Drept" & data$Name !="Biblioteca Nationala a Republicii Moldova"),]
data<-data[data$Raion != "Chisinau",]
pattern <- grep("Number of all unique users to library", data$Question, useBytes = T)
data<-data[pattern,]
data$Answer<-as.numeric(data$Answer)
data<-data%>% group_by(Date) %>% summarise(Answer = sum(Answer,na.rm = TRUE))
View(data)
options(stringsAsFactors = FALSE)
data <- read.csv("report_2014-06-26.csv", sep="\t",header=TRUE)
trim <- function (x) gsub("^\\s+|\\s+$+|\\?", "", x)
replace<-function (x) gsub("unic", "unique", x)
data<-as.data.frame(apply(data,MARGIN=2,FUN=trim))
data<-as.data.frame(apply(data,MARGIN=2,FUN=replace))
data<-data[which(data$Question !="Upload other documents" & data$Question !="Upload photos"),]
data<-data[which(data$Name !="Biblioteca Publica de Drept" & data$Name !="Biblioteca Nationala a Republicii Moldova"),]
data<-data[data$Raion != "Chisinau",]
pattern <- grep("Number of all unique users to library", data$Question, useBytes = T)
data<-data[pattern,]
View(data)
View(df)
View(data)
View(df)
options(stringsAsFactors = FALSE)
data <- read.csv("report_2014-06-26.csv", sep="\t",header=TRUE)
trim <- function (x) gsub("^\\s+|\\s+$+|\\?", "", x)
replace<-function (x) gsub("unic", "unique", x)
data<-as.data.frame(apply(data,MARGIN=2,FUN=trim))
data<-as.data.frame(apply(data,MARGIN=2,FUN=replace))
data<-data[which(data$Question !="Upload other documents" & data$Question !="Upload photos"),]
data<-data[which(data$Name !="Biblioteca Publica de Drept" & data$Name !="Biblioteca Nationala a Republicii Moldova"),]
data<-data[data$Raion != "Chisinau",]
data$Question[data$Question=="Number of all new unique users to library"]<-"Number of all unique users to library"
pattern <- grep("Number of all unique users to library", data$Question, useBytes = T)
data<-data[pattern,]
data$Answer<-as.numeric(data$Answer)
data<-data%>% group_by(Date) %>% summarise(Answer = sum(Answer,na.rm = TRUE))
shiny::runApp()
options(stringsAsFactors = FALSE)
data <- read.csv("report_2014-06-26.csv", sep="\t",header=TRUE)
trim <- function (x) gsub("^\\s+|\\s+$+|\\?", "", x)
replace<-function (x) gsub("unic", "unique", x)
data<-as.data.frame(apply(data,MARGIN=2,FUN=trim))
data<-as.data.frame(apply(data,MARGIN=2,FUN=replace))
data<-data[which(data$Question !="Upload other documents" & data$Question !="Upload photos"),]
data<-data[which(data$Name !="Biblioteca Publica de Drept" & data$Name !="Biblioteca Nationala a Republicii Moldova"),]
data<-data[data$Raion != "Chisinau",]
data$Question[data$Question=="Number of all new unique users to library"]<-"Number of all unique users to library"
pattern <- grep("Number of all unique users to library", data$Question, useBytes = T)
users<-data[pattern,]
users$Answer<-as.numeric(data$Answer)
users<-users%>% group_by(Date) %>% summarise(Answer = sum(Answer,na.rm = TRUE))
shiny::runApp()
pattern<-agrep("Total number of registered/unic users of each gender",x=data$Question,useBytes=T)
gender<-data[pattern,]
gender$Answer<-as.numeric(gender$Answer)
gender<-ddply(gender,.(Date,Question),summarize, Value=sum(Answer,na.rm=T))
library(plyr)
library(dplyr)
View(gender)
library(reshape)
library(dplyr)
library(reshape)
gender<-gender%>% group_by(Date) %>% summarise(Answer = sum(Answer,na.rm = TRUE))
View(gender)
pattern<-agrep("Total number of registered/unic users of each gender",x=data$Question,useBytes=T)
gender<-data[pattern,]
gender$Answer<-as.numeric(gender$Answer)
gender<-gender%>% group_by(Date) %>% summarise(Answer = sum(Answer,na.rm = TRUE))
pattern<-agrep("Total number of registered/unic users of each gender",x=data$Question,useBytes=T)
gender<-data[pattern,]
View(gender)
gender$Answer<-as.numeric(gender$Answer)
View(gender)
gender<-gender%>% group_by(Date) %>% summarise(Answer = sum(Answer,na.rm = TRUE))
View(gender)
pattern<-agrep("Total number of registered/unic users of each gender",x=data$Question,useBytes=T)
gender<-data[pattern,]
gender$Answer<-as.numeric(gender$Answer)
gender<-gender%>% group_by(Date)
%>% summarise(Answer = sum(Answer,na.rm = TRUE))
gender<-gender%>% group_by(Date) %>% summarise(Answer = sum(Answer,na.rm = TRUE))
pattern<-agrep("Total number of registered/unic users of each gender",x=data$Question,useBytes=T)
gender<-data[pattern,]
View(gender)
options(stringsAsFactors = FALSE)
data <- read.csv("report_2014-06-26.csv", sep="\t",header=TRUE)
trim <- function (x) gsub("^\\s+|\\s+$+|\\?", "", x)
replace<-function (x) gsub("unic", "unique", x)
data<-as.data.frame(apply(data,MARGIN=2,FUN=trim))
data<-as.data.frame(apply(data,MARGIN=2,FUN=replace))
data<-data[which(data$Question !="Upload other documents" & data$Question !="Upload photos"),]
data<-data[which(data$Name !="Biblioteca Publica de Drept" & data$Name !="Biblioteca Nationala a Republicii Moldova"),]
data<-data[data$Raion != "Chisinau",]
data$Question[data$Question=="Number of all new unique users to library"]<-"Number of all unique users to library"
pattern <- grep("Number of all unique users to library", data$Question, useBytes = T)
users<-data[pattern,]
users$Answer<-as.numeric(users$Answer)
users<-users%>% group_by(Date) %>% summarise(Answer = sum(Answer,na.rm = TRUE))
shiny::runApp()
library(shiny)
library(dplyr)
options(stringsAsFactors = FALSE)
data <- read.csv("report_2014-06-26.csv", sep="\t",header=TRUE)
trim <- function (x) gsub("^\\s+|\\s+$+|\\?", "", x)
replace<-function (x) gsub("unic", "unique", x)
data<-as.data.frame(apply(data,MARGIN=2,FUN=trim))
data<-as.data.frame(apply(data,MARGIN=2,FUN=replace))
data<-data[which(data$Question !="Upload other documents" & data$Question !="Upload photos"),]
data<-data[which(data$Name !="Biblioteca Publica de Drept" & data$Name !="Biblioteca Nationala a Republicii Moldova"),]
data<-data[data$Raion != "Chisinau",]
data$Question[data$Question=="Number of all new unique users to library"]<-"Number of all unique users to library"
pattern <- grep("Number of all unique users to library", data$Question, useBytes = T)
users<-data[pattern,]
users$Answer<-as.numeric(users$Answer)
users<-users%>% group_by(Date) %>% summarise(Answer = sum(Answer,na.rm = TRUE))
options(stringsAsFactors = FALSE)
data <- read.csv("report_2014-06-26.csv", sep="\t",header=TRUE)
trim <- function (x) gsub("^\\s+|\\s+$+|\\?", "", x)
detach("package:reshape", unload=TRUE)
replace<-function (x) gsub("unic", "unique", x)
data<-as.data.frame(apply(data,MARGIN=2,FUN=trim))
data<-as.data.frame(apply(data,MARGIN=2,FUN=replace))
data<-data[which(data$Question !="Upload other documents" & data$Question !="Upload photos"),]
data<-data[which(data$Name !="Biblioteca Publica de Drept" & data$Name !="Biblioteca Nationala a Republicii Moldova"),]
data<-data[data$Raion != "Chisinau",]
data$Question[data$Question=="Number of all new unique users to library"]<-"Number of all unique users to library"
pattern <- grep("Number of all unique users to library", data$Question, useBytes = T)
users<-data[pattern,]
users$Answer<-as.numeric(users$Answer)
users<-users%>% group_by(Date) %>% summarise(Answer = sum(Answer,na.rm = TRUE))
View(users)
data<-data[data$Raion != "Chisinau",]
data$Question[data$Question=="Number of all new unique users to library"]<-"Number of all unique users to library"
pattern <- grep("Number of all unique users to library", data$Question, useBytes = T)
users<-data[pattern,]
users$Answer<-as.numeric(users$Answer)
users%>% group_by(Date) %>% summarise(Answer = sum(Answer,na.rm = TRUE)
)
options(stringsAsFactors = FALSE)
data <- read.csv("report_2014-06-26.csv", sep="\t",header=TRUE)
trim <- function (x) gsub("^\\s+|\\s+$+|\\?", "", x)
replace<-function (x) gsub("unic", "unique", x)
data<-as.data.frame(apply(data,MARGIN=2,FUN=trim))
data<-as.data.frame(apply(data,MARGIN=2,FUN=replace))
data<-data[which(data$Question !="Upload other documents" & data$Question !="Upload photos"),]
data<-data[which(data$Name !="Biblioteca Publica de Drept" & data$Name !="Biblioteca Nationala a Republicii Moldova"),]
data<-data[data$Raion != "Chisinau",]
data$Question[data$Question=="Number of all new unique users to library"]<-"Number of all unique users to library"
pattern <- grep("Number of all unique users to library", data$Question, useBytes = T)
users<-data[pattern,]
users$Answer<-as.numeric(users$Answer)
users$Date<-as.Date(users$Date)
users<-users%>% group_by(Date) %>% summarise(Answer = sum(Answer,na.rm = TRUE))
library(shiny)
library(dplyr)
library(ggvis)
library(reshape)
library(rgdal)
library(rgeos)
library(maptools)
gpclibPermit()
options(stringsAsFactors = FALSE)
data <- read.csv("report_2014-06-26.csv", sep="\t",header=TRUE)
trim <- function (x) gsub("^\\s+|\\s+$+|\\?", "", x)
replace<-function (x) gsub("unic", "unique", x)
data<-as.data.frame(apply(data,MARGIN=2,FUN=trim))
data<-as.data.frame(apply(data,MARGIN=2,FUN=replace))
data<-data[which(data$Question !="Upload other documents" & data$Question !="Upload photos"),]
data<-data[which(data$Name !="Biblioteca Publica de Drept" & data$Name !="Biblioteca Nationala a Republicii Moldova"),]
data<-data[data$Raion != "Chisinau",]
# users
data$Question[data$Question=="Number of all new unique users to library"]<-"Number of all unique users to library"
pattern <- grep("Number of all unique users to library", data$Question, useBytes = T)
users<-data[pattern,]
users$Answer<-as.numeric(users$Answer)
users<-users%>% group_by(Date) %>% summarise(Answer = sum(Answer,na.rm = TRUE))
users$Date<-format(as.Date(users$Date),"%b,%y")
# Gender
pattern<-agrep("Total number of registered/unic users of each gender",x=data$Question,useBytes=T)
gender<-data[pattern,]
gender$Answer<-as.numeric(gender$Answer)
gender<-gender%>% group_by(Date,Question) %>% summarise(Answer = sum(Answer,na.rm = TRUE))
gender<-cast(gender, Date~Question)
gender$Total<-gender[,2]+gender[,3]
gender$Percent_Female<-gender[,2]/gender[,4]*100
gender$Percent_Male<-gender[,3]/gender[,4]*100
gender<-gender[,c("Date","Percent_Female","Percent_Male")]
gender<-as.data.frame(gender)
gender<-melt(gender,"Date")
gender$Date<-format(as.Date(gender$Date),"%b,%y")
View(gender)
View(gender)
View(users)
View(gender)
gender%>%
ggvis(x=~Date,y=~Value,stroke= ~variable) %>%
layer_lines() %>%
layer_points()
gender%>%
ggvis(x=~Date,y=~value,stroke= ~variable) %>%
layer_lines()
gender%>%
ggvis(x=~Date,y=~value,stroke= ~variable) %>%
layer_lines() %>%
layer_points()
gender%>%
ggvis(x=~Date,y=~value,stroke= ~variable) %>%
layer_lines() %>%
layer_points(stroke= ~variable)
gender%>%
ggvis(x=~Date,y=~value,stroke= ~variable) %>%
layer_lines() %>%
layer_points(fill= ~variable)
shiny::runApp()
View(gender)
View(gender)
View(users)
shiny::runApp()
shiny::runApp()
options(stringsAsFactors = FALSE)
data <- read.csv("report_2014-06-26.csv", sep="\t",header=TRUE)
trim <- function (x) gsub("^\\s+|\\s+$+|\\?", "", x)
replace<-function (x) gsub("unic", "unique", x)
data<-as.data.frame(apply(data,MARGIN=2,FUN=trim))
data<-as.data.frame(apply(data,MARGIN=2,FUN=replace))
data<-data[which(data$Question !="Upload other documents" & data$Question !="Upload photos"),]
data<-data[which(data$Name !="Biblioteca Publica de Drept" & data$Name !="Biblioteca Nationala a Republicii Moldova"),]
data<-data[data$Raion != "Chisinau",]
pattern<-agrep("Total number of registered/unic users of each gender",x=data$Question,useBytes=T)
gender<-data[pattern,]
gender$Answer<-as.numeric(gender$Answer)
gender<-gender%>% group_by(Date,Question) %>% summarise(Answer = sum(Answer,na.rm = TRUE))
gender<-cast(gender, Date~Question)
gender$Total<-gender[,2]+gender[,3]
gender$Percent_Female<-gender[,2]/gender[,4]*100
gender$Percent_Male<-gender[,3]/gender[,4]*100
gender<-gender[,c("Date","Percent_Female","Percent_Male")]
gender<-as.data.frame(gender)
gender<-melt(gender,"Date")
gender$Date<-as.Date(format(as.Date(gender$Date),"%b,%y"))
gender$Date<-as.Date(gender$Date)
gender%>%
ggvis(x=~Date,y=~value,stroke= ~variable) %>%
layer_lines() %>%
layer_points(fill= ~variable)
View(gender)
shiny::runApp()
library(ggvis)
all_values <- function(x) {
if(is.null(x)) return(NULL)
paste0(names(x), ": ", format(x), collapse = "<br />")
}
gender%>%
ggvis(x=~Date,y=~Percent_Female) %>%
layer_lines() %>%
layer_points() %>%
add_tooltip(all_values, "hover")
area%>%
ggvis(x=~long,y=~lat, stroke := "white") %>%
group_by(group) %>%
layer_paths() %>%
layer_paths(fill=~Value) %>%
hide_axis("x")%>%
hide_axis("y") %>%
#layer_points() %>%
add_tooltip(all_values, "hover") %>%
set_options(width = 400, height = 500)
options(stringsAsFactors = FALSE)
data <- read.csv("report_2014-06-27.csv", sep="\t",header=TRUE)
trim <- function (x) gsub("^\\s+|\\s+$+|\\?", "", x)
replace<-function (x) gsub("unic", "unique", x)
data<-as.data.frame(apply(data,MARGIN=2,FUN=trim))
data<-as.data.frame(apply(data,MARGIN=2,FUN=replace))
data<-data[which(data$Question !="Upload other documents" & data$Question !="Upload photos"),]
data<-data[which(data$Name !="Biblioteca Publica de Drept" & data$Name !="Biblioteca Nationala a Republicii Moldova"),]
data<-data[data$Raion != "Chisinau",]
# users
data$Question[data$Question=="Number of all new unique users to library"]<-"Number of all unique users to library"
pattern <- grep("Number of all unique users to library", data$Question, useBytes = T)
users<-data[pattern,]
users$Answer<-as.numeric(users$Answer)
users<-users%>% group_by(Date) %>% summarise(Answer = sum(Answer,na.rm = TRUE))
users$Date<-as.Date(users$Date)
# Gender
pattern<-agrep("Total number of registered/unic users of each gender",x=data$Question,useBytes=T)
gender<-data[pattern,]
gender$Answer<-as.numeric(gender$Answer)
gender<-gender%>% group_by(Date,Question) %>% summarise(Answer = sum(Answer,na.rm = TRUE))
gender<-cast(gender, Date~Question)
gender$Total<-gender[,2]+gender[,3]
gender$Percent_Female<-gender[,2]/gender[,4]*100
gender$Percent_Male<-gender[,3]/gender[,4]*100
gender<-gender[,c("Date","Percent_Female","Percent_Male")]
gender<-as.data.frame(gender)
gender<-melt(gender,"Date")
gender$Date<-as.Date(gender$Date)
users%>%
ggvis(x=~Date,y=~Answer) %>%
layer_lines() %>%
layer_points() %>%
bind_shiny("u")
gender%>%
ggvis(x=~Date,y=~value,stroke= ~variable) %>%
layer_lines() %>%
layer_points(fill= ~variable) %>%
bind_shiny("g")
})
all_values <- function(x) {
if(is.null(x)) return(NULL)
paste0(names(x), ": ", format(x), collapse = "<br />")
}
gender%>%
ggvis(x=~Date,y=~Percent_Female) %>%
layer_lines() %>%
layer_points() %>%
add_tooltip(all_values, "hover")
area%>%
ggvis(x=~long,y=~lat, stroke := "white") %>%
group_by(group) %>%
layer_paths() %>%
layer_paths(fill=~Value) %>%
hide_axis("x")%>%
hide_axis("y") %>%
#layer_points() %>%
add_tooltip(all_values, "hover") %>%
set_options(width = 400, height = 500)
gender%>%
ggvis(x=~Date,y=~Percent_Female) %>%
layer_lines() %>%
layer_points() %>%
add_tooltip(all_values, "hover")
View(gender)
gender<-cast(gender, Date~Question)
gender$Total<-gender[,2]+gender[,3]
gender$Percent_Female<-gender[,2]/gender[,4]*100
gender$Percent_Male<-gender[,3]/gender[,4]*100
gender<-gender[,c("Date","Percent_Female","Percent_Male")]
gender<-as.data.frame(gender)
gender<-melt(gender,"Date")
gender$Date<-as.Date(gender$Date)
library(shiny)
library(dplyr)
library(ggvis)
library(reshape)
library(rgdal)
library(rgeos)
library(maptools)
gpclibPermit()
# Gender
pattern<-agrep("Total number of registered/unic users of each gender",x=data$Question,useBytes=T)
gender<-data[pattern,]
gender$Answer<-as.numeric(gender$Answer)
gender<-gender%>% group_by(Date,Question) %>% summarise(Answer = sum(Answer,na.rm = TRUE))
gender<-cast(gender, Date~Question)
gender$Total<-gender[,2]+gender[,3]
gender$Percent_Female<-gender[,2]/gender[,4]*100
gender$Percent_Male<-gender[,3]/gender[,4]*100
gender<-gender[,c("Date","Percent_Female","Percent_Male")]
gender<-as.data.frame(gender)
gender<-melt(gender,"Date")
gender$Date<-as.Date(gender$Date)
gender%>%
ggvis(x=~Date,y=~Percent_Female) %>%
layer_lines() %>%
layer_points() %>%
add_tooltip(all_values, "hover")
View(gender)
View(gender)
View(gender)
gender%>%
ggvis(x=~Date,y=~variable) %>%
layer_lines() %>%
layer_points() %>%
add_tooltip(all_values, "hover")
gender%>%
ggvis(x=~Date,y=~value,stroke= ~variable) %>%
layer_lines() %>%
layer_points() %>%
add_tooltip(all_values, "hover")
load("area.rds")
load(area.rds)
shiny::runApp()
shiny::runApp()
attach("area.rds\")
)
attach("area.rds\")
attach("area.rds")
